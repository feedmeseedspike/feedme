"use client"

import React, { useEffect, useState } from 'react';

const AnimatedLogo = ({ className = '' }: { className?: string }) => {
  const [isAnimating, setIsAnimating] = useState(true);

  useEffect(() => {
    const timer = setTimeout(() => setIsAnimating(false), 3000);
    return () => clearTimeout(timer);
  }, []);

  return (
    <div className="flex justify-center items-center h-screen">
      <svg 
        width="113" 
        height="24" 
        viewBox="0 0 113 24" 
        fill="none" 
        xmlns="http://www.w3.org/2000/svg"
        className={`size-[250px] md:size-[300px] ${className}`}
      >
        {/* Path 1 */}
        <path 
          d="M27.5682 23.9998C29.8651 23.9998 32.1592 23.327 33.5378 22.3178C34.365 21.736 34.8531 20.9998 34.8531 20.236C34.8531 19.2268 34.1196 18.3996 33.047 18.3996C32.741 18.3996 32.3439 18.5513 31.8228 18.8574C30.5682 19.6542 29.3439 20.1119 28.0287 20.1119C25.5802 20.1119 24.1105 18.7967 24.0167 16.8693H33.0167C34.4864 16.8693 35.0985 16.3178 35.0985 14.9392C35.0985 10.6846 32.0985 6.85742 27.5075 6.85742C22.7318 6.85742 19.4258 10.839 19.4258 15.43C19.4258 20.2664 22.5802 23.9998 27.5682 23.9998ZM24.0167 13.8997C24.1105 12.0936 25.6105 10.4695 27.3862 10.4695C29.1923 10.4695 30.7226 12.0936 30.7833 13.8997H24.0167Z" 
          fill="#1B6013"
          className={`${isAnimating ? 'animate-draw-1' : ''} transition-all duration-300`}
        />

        {/* Path 2 */}
        <path 
          d="M44.3758 23.9998C46.6727 23.9998 48.9668 23.327 50.3455 22.3178C51.1727 21.736 51.6607 20.9998 51.6607 20.236C51.6607 19.2268 50.9273 18.3996 49.8546 18.3996C49.5486 18.3996 49.1515 18.5513 48.6304 18.8574C47.3758 19.6542 46.1515 20.1119 44.8363 20.1119C42.3878 20.1119 40.9181 18.7967 40.8244 16.8693H49.8243C51.294 16.8693 51.9061 16.3178 51.9061 14.9392C51.9061 10.6846 48.9061 6.85742 44.3152 6.85742C39.5394 6.85742 36.2334 10.839 36.2334 15.43C36.2334 20.2664 39.3878 23.9998 44.3758 23.9998ZM40.8244 13.8997C40.9181 12.0936 42.4181 10.4695 44.1938 10.4695C45.9999 10.4695 47.5302 12.0936 47.5909 13.8997H40.8244Z" 
          fill="#1B6013"
          className={`${isAnimating ? 'animate-draw-2' : ''} transition-all duration-300`}
        />

        {/* Path 3 */}
        <path 
          d="M60.323 23.9999C62.1594 23.9999 63.4774 23.3877 64.5169 22.0118H64.5775L64.641 22.3482C64.8533 23.0817 65.4351 23.7572 66.5987 23.7572C67.8533 23.7572 68.6805 22.7756 68.6805 21.5514V2.17554C68.6805 0.981612 67.7926 0 66.538 0C65.2531 0 64.4259 0.981612 64.4259 2.17554V8.38782H64.3349C63.2016 7.34831 62.038 6.8575 60.3533 6.8575C56.0684 6.8575 53.0381 10.715 53.0381 15.4301C53.0381 20.3271 56.1925 23.9999 60.323 23.9999ZM60.8744 19.9604C58.6713 19.9604 57.323 18.0633 57.323 15.4301C57.323 12.8575 58.6713 10.8998 60.9048 10.8998C63.0472 10.8998 64.4259 12.8271 64.4259 15.4301C64.4259 18.0633 63.0776 19.9604 60.8744 19.9604Z" 
          fill="#1B6013"
          className={`${isAnimating ? 'animate-draw-3' : ''} transition-all duration-300`}
        />

        {/* Path 4 */}
        <path 
          d="M72.5662 23.7572C73.7904 23.7572 74.7389 23.3271 75.1057 20.9089L76.8207 9.46043H76.8814L80.6783 21.7664C81.1056 23.0514 81.6874 23.7572 83.0661 23.7572C84.3814 23.7572 85.0238 23.2058 85.4843 21.7664L89.2811 9.4301H89.3418L91.0238 20.6938C91.3629 22.7756 91.851 23.7572 93.566 23.7572C94.8206 23.7572 95.6478 22.7756 95.6478 21.6754C95.6478 21.3694 95.5872 20.6332 95.4024 19.533L92.8933 4.65439C92.4934 2.42095 91.4843 1.59375 89.6479 1.59375C87.7508 1.59375 87.1056 2.81801 86.0358 6.18472L83.0964 15.5514H83.0358L79.9117 5.4816C79.0569 2.81801 78.4448 1.59375 76.363 1.59375C74.6783 1.59375 73.6388 2.45128 73.2693 4.68473L71.1875 17.0817C70.6691 20.1451 70.4844 21.2756 70.4844 21.6754C70.4844 22.7756 71.3722 23.7572 72.5662 23.7572Z" 
          fill="#1B6013"
          className={`${isAnimating ? 'animate-draw-4' : ''} transition-all duration-300`}
        />

        {/* Path 5 */}
        <path 
          d="M105.041 23.9998C107.338 23.9998 109.632 23.327 111.01 22.3178C111.838 21.736 112.326 20.9998 112.326 20.236C112.326 19.2268 111.592 18.3996 110.52 18.3996C110.214 18.3996 109.817 18.5513 109.295 18.8574C108.041 19.6542 106.817 20.1119 105.501 20.1119C103.053 20.1119 101.583 18.7967 101.489 16.8693H110.489C111.959 16.8693 112.571 16.3178 112.571 14.9392C112.571 10.6846 109.571 6.85742 104.98 6.85742C100.204 6.85742 96.8984 10.839 96.8984 15.43C96.8984 20.2664 100.053 23.9998 105.041 23.9998ZM101.489 13.8997C101.583 12.0936 103.083 10.4695 104.859 10.4695C106.665 10.4695 108.195 12.0936 108.256 13.8997H101.489Z" 
          fill="#1B6013"
          className={`${isAnimating ? 'animate-draw-5' : ''} transition-all duration-300`}
        />

        {/* Path 6 (Stroke) */}
        <path 
          d="M2 1.78662H18.0077" 
          stroke="#F0800F" 
          strokeWidth="3.03731" 
          strokeLinecap="round"
          className={`${isAnimating ? 'animate-draw-6' : ''} transition-all duration-300`}
        />

        {/* Path 7 (Stroke) */}
        <path 
          d="M2 12.6538H12.3903" 
          stroke="#1B6013" 
          strokeWidth="3.03731" 
          strokeLinecap="round"
          className={`${isAnimating ? 'animate-draw-7' : ''} transition-all duration-300`}
        />

        {/* Path 8 (Stroke) */}
        <path 
          d="M2 22.1572H7.21688" 
          stroke="#F0800F" 
          strokeWidth="3.03731" 
          strokeLinecap="round"
          className={`${isAnimating ? 'animate-draw-8' : ''} transition-all duration-300`}
        />
      </svg>

    </div>
  );
};

export default AnimatedLogo;